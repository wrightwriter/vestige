// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_INCLUDES_H_
# define SHADER_INCLUDES_H_

static const char* music_comp =
 "#version 460\n"
 "layout(local_size_x=256)in;"
 "layout(std430,binding=0) buffer Aa{vec2 i[];};"
 "layout(location=0) uniform int offs;"
 "float f=2.*acos(-1.);"
 "uvec3 t(uvec3 f)"
 "{"
   "f=f*1664525u+1013904223u;"
   "f.x+=f.y*f.z;"
   "f.y+=f.z*f.x;"
   "f.z+=f.x*f.y;"
   "f^=f>>16u;"
   "f.x+=f.y*f.z;"
   "f.y+=f.z*f.x;"
   "f.z+=f.x*f.y;"
   "return f;"
 "}"
 "vec3 s(vec3 f)"
 "{"
   "uvec3 T=t(floatBitsToUint(f*125.12));"
   "return vec3(T)/float(-1u);"
 "}"
 "vec3 p(vec3 f)"
 "{"
   "f+=12.124;"
   "uvec3 i=floatBitsToUint(f);"
   "i=(i>>16u^i.yzx)*1111111111u;"
   "i=(i>>16u^i.yzx)*1111111111u;"
   "i=(i>>16u^i.yzx)*1111111111u;"
   "return vec3(i)/float(-1u);"
 "}"
 "vec3 n(float f)"
 "{"
   "return p(vec3(f));"
 "}"
 "float d(float f)"
 "{"
   "return 440.*pow(2.,f/12.);"
 "}"
 "mat2 r(float f)"
 "{"
   "return mat2(cos(f),-sin(f),sin(f),cos(f));"
 "}"
 "vec3 d(vec3 f,float T,float u)"
 "{"
   "vec4 i=vec4(0);"
   "for(int v=0;v++<5;)"
     "f.yz*=r(4.5),f.xy*=r(1.5),f+=sin(f.zxy),i=(i+vec4(cross(cos(f),sin(f.yzx)),1))/T,f*=u;"
   "return i.xyz/i.w;"
 "}"
 "void main()"
 "{"
   "uint T=gl_GlobalInvocationID.x+uint(offs);"
   "vec2 v=vec2(0),u=vec2(0);"
   "float x=float(T)/44100.,m=x,y=float(T%529200)/44100.,z=smoothstep(430.,470.,m),e=1.;"
   "if(x>280.)"
     "{"
       "float i=mod(x,4.),s=exp(-i*10.);"
       "i=35+pow(z,40)*100;"
       "v+=s*sin(y*i*f+sin(y*i*f*10)*s*.2)*20;"
     "}"
   "if(x>250.)"
     "{"
       "float f=2+sin(x)*2e-4;"
       "x*=4;"
       "float T=floor(-x/f),v=mod(-x,f);"
       "x=v+n(T).x*4+(x/4-260)*.6;"
       "e=smoothstep(0.,f*.04,v)*smoothstep(f,f*.98,v)*(1.-z);"
       "y*=.25+float(m>260.)/4+n(T).z*.02;"
     "}"
   "else"
     " x=mix(x,0,pow(clamp((x-230)*.04,0,1),2));"
   "float C=1000;"
   "float[4] t=float[](-12.,1.,3.,10.);"
   "vec2 l=vec2(0);"
   "{"
     "float[7] c=float[](0.,1.,3.,5.,7.,8.,10.);"
     "for(float i=10;i++<2435.;)"
       "{"
         "float v=60./140.*4.,T=x;"
         "T-=v*floor(n(i).z*4);"
         "T-=v*pow(n(i).y,1.2)*(1.+6*smoothstep(10,20,x));"
         "float s=floor(T/(v*4.)),u=smoothstep(0,4,s)/2;"
         "T=mod(T,v*4.);"
         "u=d(c[int(i+s)%7]-12.+12.*float(n(i+s).y<.4*u)+12.*float(n(i+s).x<.4*u)-12.*float(n(i+s).z<.5*u)-12.*float(n(i*1.5+s).z<.5*u)-12.*float(n(i*1.25+s).z<.2*u));"
         "float C=2.+pow(n(i+s).x,2.5)*20.;"
         "for(float c=0;c<C;c++)"
           "{"
             "float e=u,t=1.+smoothstep(0,4,s)*2*exp(-mod(x,1)),g=pow(n(i+c*1.5+s).x,2.+.5*smoothstep(500,2000,e));"
             "e*=1.+floor(g*t);"
             "e+=(n(c+i*1.4).x-.5)*20*smoothstep(0,30,x);"
             "t=exp(-T*(7.-6.*smoothstep(2000,800,e))*.7)*smoothstep(v*2,0,T)*smoothstep(0.,.002,T)*smoothstep(7000,800,e);"
             "vec2 p=vec2(sin(f*e*y+sin(n(i*2.4+s).x*15*y)*4.*smoothstep(10,20,x)+sin(f*e*y*2)*t*t*t*.6*smoothstep(20,60,x)))*r(i);"
             "p=m<260?"
               "mix(p,tanh(p),0.):"
               "p*2.;"
             "l+=t*p/2425./C*2e2*(float(x<60.)+z*4.);"
           "}"
       "}"
   "}"
   "v+=l;"
   "C=400;"
   "for(float T=0.;++T<C;)"
     "{"
       "float i=x-pow(smoothstep(0,1,s(vec3(T)).x),1.2)*(.2+3.*s(vec3(T)).y);"
       "if(T<2)"
         "i=x;"
       "float[4] m=float[](t[0],t[1],t[2],t[3]);"
       "if(mod(i,8)<1)"
         "for(int i=0;i<4;i++)"
           "m[i]+=7;"
       "float u=mix(10,.5+sin(i/2)*2/i*smoothstep(10,20,x),smoothstep(0,60,x));"
       "int n=int(i/u);"
       "u=mod(i,u);"
       "float e=m[n%4]-12*float(s(vec3(n)).x<.2)+12*float(s(vec3(n)).z<.2);"
       "e=d(e+12*float(i>60)-24);"
       "e-=12*float(s(vec3(n)).x<.2);"
       "u=smoothstep(0.,.004,u)*exp(-u*10.);"
       "i=(2+10*smoothstep(60,100,x))*(u*u*sin(y*e*f));"
       "if(T<2)"
         "v+=u*sin(y*e*f+i*smoothstep(1400,500,e))*.3*6;"
       "else"
         "{"
           "vec2 m=vec2(7*u*sin(y*e*f+i*(1-float(x>260)*.4)+d(vec3(1,.5,T),1,1).xy*30))/C*6;"
           "v+=m;"
         "}"
     "}"
   "v*=.14;"
   "C=44.-10.*smoothstep(30.,50.,x);"
   "for(int i=0;i<4;i++)"
     "for(float T=0.;++T<C;)"
       "{"
         "float u=x,e=d(t[i]+12*float(s(vec3(T)).z<.1)+12*float(s(vec3(T)*1e2).x<.1)-12*float(s(vec3(T)).x<.5)-12);"
         "e+=12*float(s(vec3(T)).z<.1);"
         "e-=s(vec3(T)*4.).x*smoothstep(120,144,x)*100;"
         "if(m>340)"
           "u=y*2;"
         "u*=f*e;"
         "vec2 p=d(vec3(fract(u/f))*vec3(2,-3,-8),.5,.4).xy*r(T*.2)-d(vec3(vec2(sin(u),cos(u)),T*.1+float(i)),.5,smoothstep(120,144,x)*2).xy*r(-T*.5);"
         "v+=p/C*.15*smoothstep(60,100,x)*5*smoothstep(250,230,m);"
       "}"
   "{"
     "float p=x,c=.5+sin(p*.5)*2/p,a=mod(p,c),g=d(t[0]-36.+5),b=smoothstep(160,180,x);"
     "a=smoothstep(0.,.04,a)*exp(-a*(20.-15.*b))*smoothstep(c,0.,a);"
     "c=a*a*sin(y*(g*(1+b*10*floor(n(floor(p/c)).x*10)))*f)*(1-.9*b);"
     "a*=smoothstep(100,110,x);"
     "if(x>60&&x<70)"
       "a=exp(-x+60)*4;"
     "if(x>80&&p<100)"
       "a=exp(-mod(x,4))*.4;"
     "u=u+a*sin(y*g*2)*0+a*sin(y*g*f+c)*6;"
   "}"
   "v=clamp(tanh((v*2+u)*1.2*smoothstep(0,5,m))*.7,-1,1);"
   "i[T+3000000]=v*e+tanh(l*z*.2+sin(f*30*m)*10*pow(z,30));"
 "}";

static const char* post_frag =
 "#version 460\n"
 "layout(location=1) uniform float T;"
 "layout(std430,binding=0) coherent buffer Aa{uint v[];};"
 "out vec4 C;"
 "uint u;"
 "uint m(uint f)"
 "{"
   "f=(f^f>>16)*2146121005u;"
   "f=(f^f>>15)*2221713035u;"
   "return f^f>>16;"
 "}"
 "float x(float f)"
 "{"
   "return float(m(uint(f)))/float(-1u);"
 "}"
 "float d()"
 "{"
   "uint f=m(u);"
   "u=f;"
   "return float(f)/float(-1u);"
 "}"
 "uint w(ivec2 f)"
 "{"
   "f+=20;"
   "return(f.x+1320*f.y+uint(1003200))%uint(1003200);"
 "}"
 "float d(inout vec2 f,inout float i,int s,int x)"
 "{"
   "int[148] T=int[](-1,-1,-1,1,-1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,-1,0,1,0,-1,1,-1,-1,1,1,1,-1,-1,-1,-1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,-1,-1,1,-1,1,1,1,0,1,0,-1,-1,-1,-1,1,-1,1,1,1,-1,-1,1,-1,-1,1,-1,-1,1,0,1,-1,1,0,0,0,-1,-1,-1,1,-1,1,1,1,-1,-1,1,-1,-1,1,-1,-1,1,1,1,-1,-1,-1,-1,1,-1,1,1,1,-1,-1,1,-1,-1,0,1,0,-1,1,-1,-1,1,1,1,-1,-1,-1,-1,1,-1,0,1,-1,-1,0,1,1,-1,1,-1,-1);"
   "for(int u=s;++u<x+s;)"
     "{"
       "vec2 v=vec2(T[u*4],T[u*4+1]),m=vec2(T[u*4+2],T[u*4+3]);"
       "float n=length(m-v);"
       "vec2 c=(m-v)/n;"
       "v=abs(mat2(c.x,-c.y,c.y,c.x)*(f-(v+m)/2))-vec2(n,.2)/2;"
       "i=min(i,length(max(v,0.))+min(max(v.x-.2,v.y),0.));"
     "}"
   "f.x-=2.5;"
   "return i;"
 "}"
 "void main()"
 "{"
   "float f=float(T>250),s=float(T>280),i=.03+.05*smoothstep(90,190,T)-f+4*s*smoothstep(4,0,mod(T,4)),m=(smoothstep(0,50,T)*pow(x(floor(T)),2)+.9*smoothstep(160,190,T)*exp(-mod(T,.5+sin(T/2)*2/T)*40.))*(1-f+s);"
   "u=uint(gl_FragCoord.x+gl_FragCoord.y*1111);"
   "d();"
   "if(T>80&&T<100)"
     "m=100*smoothstep(1,0,mod(T,4.));"
   "uint c=w(ivec2(gl_FragCoord.xy));"
   "vec3 e=vec3(v[c])*1e-4;"
   "float y=e.x*460;"
   "vec3[4] t=vec3[](vec3(1),vec3(1,0,1),vec3(1,1,.1),vec3(.75,1.5,1.5));"
   "vec3 p=mix(t[int(y)%4],t[int(y+1)%4],smoothstep(0,1,fract(y)));"
   "e/=1+e;"
   "e=x(floor(T*.8))<.7?"
     "1-e:"
     "pow(abs(pow(step(e,vec3(.5)),vec3(.02))),vec3(.02));"
   "if(T>60&&T<65)"
     "e=1-e;"
   "if(abs(e.x-.1)<i)"
     "e-=p;"
   "C=pow(abs(e.xyzz),vec4(4.4));"
   "if(T>460)"
     "v[c]=v[c]*400%10000000;"
   "else if(mod(T,9.-s*5.)<1.-float(T>460.))"
     "v[c]=0;"
   "else if(e.x<m)"
     "{"
       "ivec2 f=-ivec2(0,4);"
       "f*=(int(d()<e.x*1111.)*2-1)*(1+5*int(x(floor(T))));"
       "f=f*(int(x(floor(T)*124.)*2.)*2-1)*(1+int(s*smoothstep(3.,0.,mod(T,4.))*20.));"
       "if(T>122&&T<250.)"
         "f=ivec2(f.y,f.x);"
       "if(T>316&&d()>.5)"
         "f-=f;"
       "v[c]=v[w(ivec2(gl_FragCoord.xy)+f)];"
     "}"
   "else"
     " v[c]=0;"
   "if(f>.1)"
     "C=1-C;"
   "if(T>350)"
     "C=vec4(dot(C,C)<.5);"
   "vec2 n=(gl_FragCoord.xy-vec2(1280,720)/2)/720*20;"
   "y=10;"
   "if(int(T)%3==0)"
     "n.x+=3.75,d(n,y,0,4),d(n,y,4,5),d(n,y,9,4),d(n,y,13,3);"
   "else if(int(T)%3==1)"
     "n.x+=1.23,d(n,y,16,6),d(n,y,22,5);"
   "else"
     " n.x+=3.75,d(n,y,27,6),d(n,y,4,5),d(n,y,0,4),d(n,y,33,4);"
   "if(y<0&&(T>420&&T<450))"
     "v[c]+=100000;"
 "}";

static const char* render_comp =
 "#version 460\n"
 "layout(local_size_x=256)in;"
 "layout(std430,binding=0) coherent buffer Aa{uint c[];};"
 "layout(location=1) uniform float Tt;"
 "vec2 e=vec2(1300,740)+20;"
 "float y=acos(-1.);"
 "uint l;"
 "uint m(uint f)"
 "{"
   "f=(f^f>>16)*2146121005u;"
   "f=(f^f>>15)*2221713035u;"
   "return f^f>>16;"
 "}"
 "float x(float f)"
 "{"
   "return float(m(uint(f)))/float(-1u);"
 "}"
 "float d()"
 "{"
   "uint f=m(l);"
   "l=f;"
   "return float(f)/float(-1u);"
 "}"
 "vec3 h(float f)"
 "{"
   "return vec3(x(f),x(f),x(f));"
 "}\n"
 "#define pmod(p,amt)(mod((p+amt*0.5),amt)-amt*0.5)\n"
 "mat2 r(float f)"
 "{"
   "return mat2(cos(f),-sin(f),sin(f),cos(f));"
 "}"
 "float h()"
 "{"
   "return float(d()<.5)*2.-1.;"
 "}"
 "void main()"
 "{"
   "uint f=gl_GlobalInvocationID.x;"
   "l=f+1111111u;"
   "float T=mod(Tt,360),s=float(T>250),i=.5+sin(T/2)*2/T;"
   "i=exp(-mod(T,i)*4);"
   "float u=smoothstep(155,180,T)*smoothstep(250,249,T);"
   "i=(.4*smoothstep(45,15,T)-.1*u*i*(x(T)-.5)+.4*smoothstep(314,320,T)*i)*(1.-s);"
   "bool v=mod(T,8)<2,n=x(floor(T+1555))>.5;"
   "float p=.2+.4*smoothstep(60,80,T)-.4*smoothstep(90,110,T)-.4*smoothstep(120,160,T)-.2*u;"
   "if(T<10)"
     "v=false;"
   "int C=30+int(200*smoothstep(25,65,T));"
   "float m=T;"
   "m+=sin(m)*.8;"
   "vec3 t=vec3(0),g=vec3(d(),d(),d()),a=h(floor(T)),z=vec3(1,0,0);"
   "if(g.y<.5)"
     "z=vec3(0,-1,0);"
   "z*=1+.02*smoothstep(90,150,T)-u*.8;"
   "a*=1-smoothstep(90,110,T)+smoothstep(90,150,T);"
   "for(int u=0;u<C;u++)"
     "{"
       "float l=d();"
       "t+=z*(.002*(1+20*a.x)+sin(float(f.x))*.01);"
       "if(g.y<.5)"
         "{"
           "if(u%10==0)"
             "z+=t;"
           "if(u%50==10)"
             "z.yz*=r(y*h()/4);"
           "if(u==20+int(sin(T)*45))"
             "{"
               "z.xy*=r(y*h()/4+T);"
               "if(a.z>.5)"
                 "t.xy*=r(a.x);"
             "}"
           "if(a.x>.7)"
             "t=t/(dot(t,t)-.1+sin(T)*.5+.5)*(1.+sin(T+sin(T)));"
         "}"
       "else if(g.y<1.)"
         "{"
           "if(u==20)"
             "z.xz*=r(.25*y);"
           "if(u%50==50+int(sin(T*.6)*45))"
             "z.yz*=r(y*h()/4),t+=z;"
           "if(u==20+int(sin(T*.3+float(f))*25))"
             "t+=z*(1.+m),z.xy*=r(.5*y*h());"
         "}"
       "t=abs(i)>1e-4?"
         "pmod(t,3+i):"
         "pmod(t,3);"
       "vec3 b=t;"
       "if(v)"
         "{"
           "b=sin(b*5+T);"
           "b.xz*=r(T*2+sin(T*2));"
           "if(n)"
             "b=b/(dot(b,b)-.2)+.4,b/=dot(b,b)-.2,b.xz*=r(T);"
         "}"
       "else"
         " b.xz*=r(floor(x(floor(T+50))*4)/4*y*2);"
       "b.z+=4;"
       "if(T<316)"
         "b.xy/=b.z*p;"
       "b.x=b.x*e.y/e.x+10*(d()-.5)*abs(b.z-sin(T*9)*4*float(T>280))*s*(1-smoothstep(314,320,T));"
       "uvec2 A=uvec2((b.xy/2.+.5)*e);"
       "uint w=A.x+uint(e.x)*A.y;"
       "atomicAdd(c[w],7);"
       "atomicAdd(c[w*(1+uint(a.x*6+T)%2)%uint(e.x*e.y)],uint(111));"
     "}"
 "}";

#endif // SHADER_INCLUDES_H_
